// <auto-generated />
using System;
using Kjkardum.CloudyBack.Infrastructure.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Kjkardum.CloudyBack.Infrastructure.Persistence.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250608182741_AddKeyValueTable")]
    partial class AddKeyValueTable
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Kjkardum.CloudyBack.Domain.Entities.AuditLogEntry", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ActionDisplayText")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ActionMetadata")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ActionName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("ResourceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("Timestamp");

                    b.HasIndex("ResourceId", "Timestamp")
                        .IsUnique()
                        .IsDescending(false, true);

                    b.ToTable("AuditLogEntries");
                });

            modelBuilder.Entity("Kjkardum.CloudyBack.Domain.Entities.BaseResource", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CreatedAt");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.HasIndex("UpdatedAt");

                    b.ToTable((string)null);

                    b.UseTpcMappingStrategy();
                });

            modelBuilder.Entity("Kjkardum.CloudyBack.Domain.Entities.KeyValueTableEntry", b =>
                {
                    b.Property<string>("Key")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Key");

                    b.ToTable("KeyValueTableEntries");
                });

            modelBuilder.Entity("Kjkardum.CloudyBack.Domain.Entities.PublicProxyConfiguration", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Domain")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Port")
                        .HasColumnType("int");

                    b.Property<bool>("UseHttps")
                        .HasColumnType("bit");

                    b.Property<Guid>("VirtualNetworkableBaseResourceId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("VirtualNetworkableBaseResourceId");

                    b.ToTable("PublicProxyConfigurations");
                });

            modelBuilder.Entity("Kjkardum.CloudyBack.Domain.Entities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("LastLogin")
                        .HasColumnType("datetime2");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Kjkardum.CloudyBack.Domain.Entities.VirtualNetworkConnection", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ResourceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("VirtualNetworkId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ResourceId");

                    b.HasIndex("VirtualNetworkId");

                    b.ToTable("VirtualNetworkConnections");
                });

            modelBuilder.Entity("Kjkardum.CloudyBack.Domain.Entities.WebApplicationConfigurationEntry", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Key")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("WebApplicationResourceId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("WebApplicationResourceId");

                    b.ToTable("WebApplicationConfigurationEntries");
                });

            modelBuilder.Entity("Kjkardum.CloudyBack.Domain.Entities.ResourceGroup", b =>
                {
                    b.HasBaseType("Kjkardum.CloudyBack.Domain.Entities.BaseResource");

                    b.ToTable("ResourceGroups");
                });

            modelBuilder.Entity("Kjkardum.CloudyBack.Domain.Entities.ResourceGroupedBaseResource", b =>
                {
                    b.HasBaseType("Kjkardum.CloudyBack.Domain.Entities.BaseResource");

                    b.Property<Guid>("ResourceGroupId")
                        .HasColumnType("uniqueidentifier");

                    b.HasIndex("ResourceGroupId");

                    b.ToTable((string)null);
                });

            modelBuilder.Entity("Kjkardum.CloudyBack.Domain.Entities.PostgresDatabaseResource", b =>
                {
                    b.HasBaseType("Kjkardum.CloudyBack.Domain.Entities.ResourceGroupedBaseResource");

                    b.Property<string>("AdminPassword")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AdminUsername")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DatabaseName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("PostgresDatabaseServerResourceId")
                        .HasColumnType("uniqueidentifier");

                    b.HasIndex("PostgresDatabaseServerResourceId");

                    b.ToTable("PostgresDatabaseResources");
                });

            modelBuilder.Entity("Kjkardum.CloudyBack.Domain.Entities.VirtualNetworkResource", b =>
                {
                    b.HasBaseType("Kjkardum.CloudyBack.Domain.Entities.ResourceGroupedBaseResource");

                    b.ToTable("VirtualNetworkResources");
                });

            modelBuilder.Entity("Kjkardum.CloudyBack.Domain.Entities.VirtualNetworkableBaseResource", b =>
                {
                    b.HasBaseType("Kjkardum.CloudyBack.Domain.Entities.ResourceGroupedBaseResource");

                    b.ToTable((string)null);
                });

            modelBuilder.Entity("Kjkardum.CloudyBack.Domain.Entities.KafkaClusterResource", b =>
                {
                    b.HasBaseType("Kjkardum.CloudyBack.Domain.Entities.VirtualNetworkableBaseResource");

                    b.Property<int>("Port")
                        .HasColumnType("int");

                    b.Property<string>("SaPassword")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SaUsername")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.ToTable("KafkaClusterResources");
                });

            modelBuilder.Entity("Kjkardum.CloudyBack.Domain.Entities.PostgresServerResource", b =>
                {
                    b.HasBaseType("Kjkardum.CloudyBack.Domain.Entities.VirtualNetworkableBaseResource");

                    b.Property<int>("Port")
                        .HasColumnType("int");

                    b.Property<string>("SaPassword")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SaUsername")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.ToTable("PostgresServerResources");
                });

            modelBuilder.Entity("Kjkardum.CloudyBack.Domain.Entities.WebApplicationResource", b =>
                {
                    b.HasBaseType("Kjkardum.CloudyBack.Domain.Entities.VirtualNetworkableBaseResource");

                    b.Property<string>("BuildCommand")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HealthCheckUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Port")
                        .HasColumnType("int");

                    b.Property<int?>("RuntimeType")
                        .HasColumnType("int");

                    b.Property<string>("SourcePath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SourceType")
                        .HasColumnType("int");

                    b.Property<string>("StartupCommand")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.ToTable("WebApplicationResources");
                });

            modelBuilder.Entity("Kjkardum.CloudyBack.Domain.Entities.AuditLogEntry", b =>
                {
                    b.HasOne("Kjkardum.CloudyBack.Domain.Entities.BaseResource", "Resource")
                        .WithMany("AuditLogEntries")
                        .HasForeignKey("ResourceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Resource");
                });

            modelBuilder.Entity("Kjkardum.CloudyBack.Domain.Entities.PublicProxyConfiguration", b =>
                {
                    b.HasOne("Kjkardum.CloudyBack.Domain.Entities.VirtualNetworkableBaseResource", "VirtualNetworkableBaseResource")
                        .WithMany("PublicProxyConfigurations")
                        .HasForeignKey("VirtualNetworkableBaseResourceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("VirtualNetworkableBaseResource");
                });

            modelBuilder.Entity("Kjkardum.CloudyBack.Domain.Entities.VirtualNetworkConnection", b =>
                {
                    b.HasOne("Kjkardum.CloudyBack.Domain.Entities.VirtualNetworkableBaseResource", "Resource")
                        .WithMany("VirtuaLNetworks")
                        .HasForeignKey("ResourceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Kjkardum.CloudyBack.Domain.Entities.VirtualNetworkResource", "VirtualNetwork")
                        .WithMany("NetworkConnections")
                        .HasForeignKey("VirtualNetworkId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Resource");

                    b.Navigation("VirtualNetwork");
                });

            modelBuilder.Entity("Kjkardum.CloudyBack.Domain.Entities.WebApplicationConfigurationEntry", b =>
                {
                    b.HasOne("Kjkardum.CloudyBack.Domain.Entities.WebApplicationResource", "WebApplicationResource")
                        .WithMany("Configuration")
                        .HasForeignKey("WebApplicationResourceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("WebApplicationResource");
                });

            modelBuilder.Entity("Kjkardum.CloudyBack.Domain.Entities.ResourceGroupedBaseResource", b =>
                {
                    b.HasOne("Kjkardum.CloudyBack.Domain.Entities.ResourceGroup", "ResourceGroup")
                        .WithMany("Resources")
                        .HasForeignKey("ResourceGroupId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("ResourceGroup");
                });

            modelBuilder.Entity("Kjkardum.CloudyBack.Domain.Entities.PostgresDatabaseResource", b =>
                {
                    b.HasOne("Kjkardum.CloudyBack.Domain.Entities.PostgresServerResource", "PostgresDatabaseServerResource")
                        .WithMany("PostgresDatabaseResources")
                        .HasForeignKey("PostgresDatabaseServerResourceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PostgresDatabaseServerResource");
                });

            modelBuilder.Entity("Kjkardum.CloudyBack.Domain.Entities.BaseResource", b =>
                {
                    b.Navigation("AuditLogEntries");
                });

            modelBuilder.Entity("Kjkardum.CloudyBack.Domain.Entities.ResourceGroup", b =>
                {
                    b.Navigation("Resources");
                });

            modelBuilder.Entity("Kjkardum.CloudyBack.Domain.Entities.VirtualNetworkResource", b =>
                {
                    b.Navigation("NetworkConnections");
                });

            modelBuilder.Entity("Kjkardum.CloudyBack.Domain.Entities.VirtualNetworkableBaseResource", b =>
                {
                    b.Navigation("PublicProxyConfigurations");

                    b.Navigation("VirtuaLNetworks");
                });

            modelBuilder.Entity("Kjkardum.CloudyBack.Domain.Entities.PostgresServerResource", b =>
                {
                    b.Navigation("PostgresDatabaseResources");
                });

            modelBuilder.Entity("Kjkardum.CloudyBack.Domain.Entities.WebApplicationResource", b =>
                {
                    b.Navigation("Configuration");
                });
#pragma warning restore 612, 618
        }
    }
}
